{"version":3,"file":"static/js/62.ab818f13.chunk.js","mappings":"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","sources":["../node_modules/react-map-gl/src/components/use-map.tsx","../node_modules/react-map-gl/src/utils/transform.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/react-map-gl/src/utils/style-utils.ts","../node_modules/react-map-gl/src/utils/deep-equal.ts","../node_modules/react-map-gl/src/mapbox/mapbox.ts","../node_modules/react-map-gl/src/mapbox/create-ref.ts","../node_modules/react-map-gl/src/utils/use-isomorphic-layout-effect.ts","../node_modules/react-map-gl/src/utils/set-globals.ts","../node_modules/react-map-gl/src/components/map.tsx","../node_modules/react-map-gl/src/utils/apply-react-style.ts","../node_modules/react-map-gl/src/components/marker.ts","../node_modules/react-map-gl/src/components/popup.ts","../node_modules/react-map-gl/src/components/use-control.ts","../node_modules/react-map-gl/src/components/attribution-control.ts","../node_modules/react-map-gl/src/components/fullscreen-control.ts","../node_modules/react-map-gl/src/components/geolocate-control.ts","../node_modules/react-map-gl/src/components/navigation-control.ts","../node_modules/react-map-gl/src/components/scale-control.ts"],"sourcesContent":["import * as React from 'react';\nimport {useState, useCallback, useMemo, useContext} from 'react';\n\nimport {MapRef} from '../mapbox/create-ref';\nimport {MapContext} from './map';\n\ntype MountedMapsContextValue = {\n  maps: {[id: string]: MapRef};\n  onMapMount: (map: MapRef, id: string) => void;\n  onMapUnmount: (id: string) => void;\n};\n\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\n\nexport const MapProvider: React.FC<{children?: React.ReactNode}> = props => {\n  const [maps, setMaps] = useState<{[id: string]: MapRef}>({});\n\n  const onMapMount = useCallback((map: MapRef, id: string = 'default') => {\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {...currMaps, [id]: map};\n    });\n  }, []);\n\n  const onMapUnmount = useCallback((id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {...currMaps};\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n\n  return (\n    <MountedMapsContext.Provider\n      value={{\n        maps,\n        onMapMount,\n        onMapUnmount\n      }}\n    >\n      {props.children}\n    </MountedMapsContext.Provider>\n  );\n};\n\nexport function useMap(): {current?: MapRef; [id: string]: MapRef | undefined} {\n  const maps = useContext(MountedMapsContext)?.maps;\n  const currentMap = useContext(MapContext);\n\n  const mapsWithCurrent = useMemo(() => {\n    return {...maps, current: currentMap?.map};\n  }, [maps, currentMap]);\n\n  return mapsWithCurrent;\n}\n","import type {MapboxProps} from '../mapbox/mapbox';\nimport type {Transform, ViewState} from '../types';\n\n/**\n * Make a copy of a transform\n * @param tr\n */\nexport function cloneTransform(tr: Transform): Transform {\n  const newTransform = tr.clone();\n  // Work around mapbox bug - this value is not assigned in clone(), only in resize()\n  newTransform.pixelsToGLUnits = tr.pixelsToGLUnits;\n  return newTransform;\n}\n\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr: Transform): ViewState {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n\n/* eslint-disable complexity */\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\nexport function applyViewStateToTransform(tr: Transform, props: MapboxProps): boolean {\n  const v: Partial<ViewState> = props.viewState || props;\n  let changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    const center = tr.center;\n    // @ts-ignore\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n  if ('zoom' in v) {\n    const zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n  if ('bearing' in v) {\n    const bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n  if ('pitch' in v) {\n    const pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n  return changed;\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import {ImmutableLike, MapboxStyle} from '../types';\n\nconst refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\n// Prepare a map style object for diffing\n// If immutable - convert to plain object\n// Work around some issues in older styles that would fail Mapbox's diffing\nexport function normalizeStyle(style: string | MapboxStyle | ImmutableLike): string | MapboxStyle {\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'string') {\n    return style;\n  }\n  if ('toJS' in style) {\n    style = style.toJS() as MapboxStyle;\n  }\n  if (!style.layers) {\n    return style;\n  }\n  const layerIndex = {};\n\n  for (const layer of style.layers) {\n    layerIndex[layer.id] = layer;\n  }\n\n  const layers = style.layers.map(layer => {\n    // @ts-expect-error\n    const layerRef = layerIndex[layer.ref];\n    let normalizedLayer = null;\n\n    if ('interactive' in layer) {\n      normalizedLayer = {...layer};\n      // Breaks style diffing :(\n      delete normalizedLayer.interactive;\n    }\n\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\n    if (layerRef) {\n      normalizedLayer = normalizedLayer || {...layer};\n      delete normalizedLayer.ref;\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\n      for (const propName of refProps) {\n        if (propName in layerRef) {\n          normalizedLayer[propName] = layerRef[propName];\n        }\n      }\n    }\n\n    return normalizedLayer || layer;\n  });\n\n  // Do not mutate the style object provided by the user\n  return {...style, layers};\n}\n","import type {PointLike} from '../types';\n\n/**\n * Compare two points\n * @param a\n * @param b\n * @returns true if the points are equal\n */\nexport function arePointsEqual(a?: PointLike, b?: PointLike): boolean {\n  const ax = Array.isArray(a) ? a[0] : a ? a.x : 0;\n  const ay = Array.isArray(a) ? a[1] : a ? a.y : 0;\n  const bx = Array.isArray(b) ? b[0] : b ? b.x : 0;\n  const by = Array.isArray(b) ? b[1] : b ? b.y : 0;\n  return ax === bx && ay === by;\n}\n\n/* eslint-disable complexity */\n/**\n * Compare any two objects\n * @param a\n * @param b\n * @returns true if the objects are deep equal\n */\nexport function deepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  } else if (Array.isArray(b)) {\n    return false;\n  }\n  if (typeof a === 'object' && typeof b === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    for (const key of aKeys) {\n      if (!b.hasOwnProperty(key)) {\n        return false;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n","import {transformToViewState, applyViewStateToTransform, cloneTransform} from '../utils/transform';\nimport {normalizeStyle} from '../utils/style-utils';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  Transform,\n  ProjectionSpecification,\n  ViewState,\n  ViewStateChangeEvent,\n  DragPanOptions,\n  ZoomRotateOptions,\n  TransformRequestFunction,\n  Light,\n  Fog,\n  TerrainSpecification,\n  MapboxStyle,\n  ImmutableLike,\n  LngLatBoundsLike,\n  FitBoundsOptions,\n  MapMouseEvent,\n  MapLayerMouseEvent,\n  MapLayerTouchEvent,\n  MapWheelEvent,\n  MapBoxZoomEvent,\n  MapStyleDataEvent,\n  MapSourceDataEvent,\n  MapboxEvent,\n  ErrorEvent,\n  MapboxGeoJSONFeature,\n  MapboxMap\n} from '../types';\n\nexport type MapboxProps = Partial<ViewState> & {\n  // Init options\n  mapboxAccessToken?: string;\n\n  /** Camera options used when constructing the Map instance */\n  initialViewState?: Partial<ViewState> & {\n    /** The initial bounds of the map. If bounds is specified, it overrides longitude, latitude and zoom options. */\n    bounds?: LngLatBoundsLike;\n    /** A fitBounds options object to use only when setting the bounds option. */\n    fitBoundsOptions?: FitBoundsOptions;\n  };\n\n  /** If provided, render into an external WebGL context */\n  gl?: WebGLRenderingContext;\n\n  /**\n   * If true, the gl context will be created with MSA antialiasing, which can be useful for antialiasing custom layers.\n   * This is false by default as a performance optimization.\n   * @default false\n   */\n  antialias?: boolean;\n  /**\n   * If true, an attribution control will be added to the map.\n   * @default true\n   */\n  attributionControl?: boolean;\n  /**\n   * Snap to north threshold in degrees.\n   * @default 7\n   */\n  bearingSnap?: number;\n  /**\n   * The max number of pixels a user can shift the mouse pointer during a click for it to be\n   * considered a valid click (as opposed to a mouse drag).\n   * @default 3\n   */\n  clickTolerance?: number;\n  /**\n   * If `true`, Resource Timing API information will be collected for requests made by GeoJSON\n   * and Vector Tile web workers (this information is normally inaccessible from the main\n   * Javascript thread). Information will be returned in a `resourceTiming` property of\n   * relevant `data` events.\n   * @default false\n   */\n  collectResourceTiming?: boolean;\n  /**\n   * If `true` , scroll zoom will require pressing the ctrl or ⌘ key while scrolling to zoom map,\n   * and touch pan will require using two fingers while panning to move the map.\n   * Touch pitch will require three fingers to activate if enabled.\n   */\n  cooperativeGestures?: boolean;\n  /**\n   * If `true`, symbols from multiple sources can collide with each other during collision\n   * detection. If `false`, collision detection is run separately for the symbols in each source.\n   * @default true\n   */\n  crossSourceCollisions?: boolean;\n  /** String or strings to show in an AttributionControl.\n   * Only applicable if options.attributionControl is `true`. */\n  customAttribution?: string | string[];\n  /**\n   * Controls the duration of the fade-in/fade-out animation for label collisions, in milliseconds.\n   * This setting affects all symbol layers. This setting does not affect the duration of runtime\n   * styling transitions or raster tile cross-fading.\n   * @default 300\n   */\n  fadeDuration?: number;\n  /** If true, map creation will fail if the implementation determines that the performance of the created WebGL context would be dramatically lower than expected.\n   * @default false\n   */\n  failIfMajorPerformanceCaveat?: boolean;\n  /** If `true`, the map's position (zoom, center latitude, center longitude, bearing, and pitch) will be synced with the hash fragment of the page's URL.\n   * For example, `http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60`.\n   * An additional string may optionally be provided to indicate a parameter-styled hash,\n   * e.g. http://path/to/my/page.html#map=2.59/39.26/53.07/-24.1/60&foo=bar, where foo\n   * is a custom parameter and bar is an arbitrary hash distinct from the map hash.\n   */\n  hash?: boolean | string;\n  /** If false, no mouse, touch, or keyboard listeners are attached to the map, so it will not respond to input\n   * @default true\n   */\n  interactive?: boolean;\n  /** A patch to apply to the default localization table for UI strings, e.g. control tooltips.\n   * The `locale` object maps namespaced UI string IDs to translated strings in the target language;\n   * see `src/ui/default_locale.js` for an example with all supported string IDs.\n   * The object may specify all UI strings (thereby adding support for a new translation) or\n   * only a subset of strings (thereby patching the default translation table).\n   */\n  locale?: {[key: string]: string};\n  /**\n   * Overrides the generation of all glyphs and font settings except font-weight keywords\n   * Also overrides localIdeographFontFamily\n   * @default null\n   */\n  localFontFamily?: string;\n  /**\n   * If specified, defines a CSS font-family for locally overriding generation of glyphs in the\n   * 'CJK Unified Ideographs' and 'Hangul Syllables' ranges. In these ranges, font settings from\n   * the map's style will be ignored, except for font-weight keywords (light/regular/medium/bold).\n   * The purpose of this option is to avoid bandwidth-intensive glyph server requests.\n   * @default \"sans-serif\"\n   */\n  localIdeographFontFamily?: string;\n  /**\n   * A string representing the position of the Mapbox wordmark on the map.\n   * @default \"bottom-left\"\n   */\n  logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  /**\n   * The maximum number of tiles stored in the tile cache for a given source. If omitted, the\n   * cache will be dynamically sized based on the current viewport.\n   * @default null\n   */\n  maxTileCacheSize?: number;\n  /**\n   * If true, map will prioritize rendering for performance by reordering layers\n   * If false, layers will always be drawn in the specified order\n   * @default true\n   */\n  optimizeForTerrain?: boolean;\n  /**\n   * If `false`, the map's pitch (tilt) control with \"drag to rotate\" interaction will be disabled.\n   * @default true\n   */\n  pitchWithRotate?: boolean;\n  /** If true, The maps canvas can be exported to a PNG using map.getCanvas().toDataURL();. This is false by default as a performance optimization.\n   * @default false\n   */\n  preserveDrawingBuffer?: boolean;\n  /**\n   * If `false`, the map won't attempt to re-request tiles once they expire per their HTTP\n   * `cacheControl`/`expires` headers.\n   * @default true\n   */\n  refreshExpiredTiles?: boolean;\n  /**\n   * Allows for the usage of the map in automated tests without an accessToken with custom self-hosted test fixtures.\n   * @default null\n   */\n  testMode?: boolean;\n  /**\n   * If  true, the map will automatically resize when the browser window resizes\n   * @default true\n   */\n  trackResize?: boolean;\n  /**\n   * A callback run before the Map makes a request for an external URL. The callback can be\n   * used to modify the url, set headers, or set the credentials property for cross-origin requests.\n   * @default null\n   */\n  transformRequest?: TransformRequestFunction;\n\n  // Handlers\n\n  /**\n   * If true, enable the \"box zoom\" interaction (see BoxZoomHandler)\n   * @default true\n   */\n  boxZoom?: boolean;\n  /**\n   * If true, enable the \"double click to zoom\" interaction (see DoubleClickZoomHandler).\n   * @default true\n   */\n  doubleClickZoom?: boolean;\n  /**\n   * If `true`, the \"drag to pan\" interaction is enabled.\n   * An `Object` value is passed as options to {@link DragPanHandler#enable}.\n   * @default true\n   */\n  dragPan?: boolean | DragPanOptions;\n  /**\n   * If true, enable the \"drag to rotate\" interaction (see DragRotateHandler).\n   * @default true\n   */\n  dragRotate?: boolean;\n  /**\n   * If true, enable keyboard shortcuts (see KeyboardHandler).\n   * @default true\n   */\n  keyboard?: boolean;\n  /**\n   * If `true`, the \"scroll to zoom\" interaction is enabled.\n   * An `Object` value is passed as options to {@link ScrollZoomHandler#enable}.\n   * @default true\n   */\n  scrollZoom?: boolean | ZoomRotateOptions;\n  /**\n   * If `true`, the \"drag to pitch\" interaction is enabled.\n   * An `Object` value is passed as options to {@link TouchPitchHandler#enable}.\n   * @default true\n   */\n  touchPitch?: boolean;\n  /**\n   * If `true`, the \"pinch to rotate and zoom\" interaction is enabled.\n   * An `Object` value is passed as options to {@link TouchZoomRotateHandler#enable}.\n   * @default true\n   */\n  touchZoomRotate?: boolean | ZoomRotateOptions;\n\n  // Constraints\n\n  /** If set, the map is constrained to the given bounds. */\n  maxBounds?: LngLatBoundsLike;\n  /** Maximum pitch of the map. */\n  maxPitch?: number;\n  /** Maximum zoom of the map. */\n  maxZoom?: number;\n  /** Minimum pitch of the map. */\n  minPitch?: number;\n  /** Minimum zoom of the map. */\n  minZoom?: number;\n\n  /** For external controller to override the camera state */\n  viewState?: ViewState & {\n    width: number;\n    height: number;\n  };\n\n  // Styling\n\n  /** Mapbox style */\n  mapStyle?: string | MapboxStyle | ImmutableLike;\n  /** Enable diffing when the map style changes\n   * @default true\n   */\n  styleDiffing?: boolean;\n  /** The fog property of the style. Must conform to the Fog Style Specification .\n   * If `null` is provided, removes the fog from the map. */\n  fog?: Fog | null;\n  /** Light properties of the map. */\n  light?: Light;\n  /** Terrain property of the style. Must conform to the Terrain Style Specification .\n   * If `null` is provided, removes terrain from the map. */\n  terrain?: TerrainSpecification | null;\n  /** Default layers to query on pointer events */\n  interactiveLayerIds?: string[];\n  /** The projection the map should be rendered in\n   * @default \"mercator\"\n   */\n  projection?: ProjectionSpecification | string;\n  /**\n   * If `true`, multiple copies of the world will be rendered, when zoomed out.\n   * @default true\n   */\n  renderWorldCopies?: boolean;\n  /** CSS cursor */\n  cursor?: string;\n\n  // Callbacks\n  onMouseDown?: (e: MapLayerMouseEvent) => void;\n  onMouseUp?: (e: MapLayerMouseEvent) => void;\n  onMouseOver?: (e: MapLayerMouseEvent) => void;\n  onMouseMove?: (e: MapLayerMouseEvent) => void;\n  onClick?: (e: MapLayerMouseEvent) => void;\n  onDblClick?: (e: MapLayerMouseEvent) => void;\n  onMouseEnter?: (e: MapLayerMouseEvent) => void;\n  onMouseLeave?: (e: MapLayerMouseEvent) => void;\n  onMouseOut?: (e: MapLayerMouseEvent) => void;\n  onContextMenu?: (e: MapLayerMouseEvent) => void;\n  onTouchStart?: (e: MapLayerTouchEvent) => void;\n  onTouchEnd?: (e: MapLayerTouchEvent) => void;\n  onTouchMove?: (e: MapLayerTouchEvent) => void;\n  onTouchCancel?: (e: MapLayerTouchEvent) => void;\n\n  onMoveStart?: (e: ViewStateChangeEvent) => void;\n  onMove?: (e: ViewStateChangeEvent) => void;\n  onMoveEnd?: (e: ViewStateChangeEvent) => void;\n  onDragStart?: (e: ViewStateChangeEvent) => void;\n  onDrag?: (e: ViewStateChangeEvent) => void;\n  onDragEnd?: (e: ViewStateChangeEvent) => void;\n  onZoomStart?: (e: ViewStateChangeEvent) => void;\n  onZoom?: (e: ViewStateChangeEvent) => void;\n  onZoomEnd?: (e: ViewStateChangeEvent) => void;\n  onRotateStart?: (e: ViewStateChangeEvent) => void;\n  onRotate?: (e: ViewStateChangeEvent) => void;\n  onRotateEnd?: (e: ViewStateChangeEvent) => void;\n  onPitchStart?: (e: ViewStateChangeEvent) => void;\n  onPitch?: (e: ViewStateChangeEvent) => void;\n  onPitchEnd?: (e: ViewStateChangeEvent) => void;\n\n  onWheel?: (e: MapWheelEvent) => void;\n  onBoxZoomStart?: (e: MapBoxZoomEvent) => void;\n  onBoxZoomEnd?: (e: MapBoxZoomEvent) => void;\n  onBoxZoomCancel?: (e: MapBoxZoomEvent) => void;\n\n  onResize?: (e: MapboxEvent) => void;\n  onLoad?: (e: MapboxEvent) => void;\n  onRender?: (e: MapboxEvent) => void;\n  onIdle?: (e: MapboxEvent) => void;\n  onError?: (e: ErrorEvent) => void;\n  onRemove?: (e: MapboxEvent) => void;\n  onData?: (e: MapStyleDataEvent | MapSourceDataEvent) => void;\n  onStyleData?: (e: MapStyleDataEvent) => void;\n  onSourceData?: (e: MapSourceDataEvent) => void;\n};\n\nconst pointerEvents = {\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseover: 'onMouseOver',\n  mousemove: 'onMouseMove',\n  click: 'onClick',\n  dblclick: 'onDblClick',\n  mouseenter: 'onMouseEnter',\n  mouseleave: 'onMouseLeave',\n  mouseout: 'onMouseOut',\n  contextmenu: 'onContextMenu',\n  touchstart: 'onTouchStart',\n  touchend: 'onTouchEnd',\n  touchmove: 'onTouchMove',\n  touchcancel: 'onTouchCancel'\n};\nconst cameraEvents = {\n  movestart: 'onMoveStart',\n  move: 'onMove',\n  moveend: 'onMoveEnd',\n  dragstart: 'onDragStart',\n  drag: 'onDrag',\n  dragend: 'onDragEnd',\n  zoomstart: 'onZoomStart',\n  zoom: 'onZoom',\n  zoomend: 'onZoomEnd',\n  rotatestart: 'onRotateStart',\n  rotate: 'onRotate',\n  rotateend: 'onRotateEnd',\n  pitchstart: 'onPitchStart',\n  pitch: 'onPitch',\n  pitchend: 'onPitchEnd'\n};\nconst otherEvents = {\n  wheel: 'onWheel',\n  boxzoomstart: 'onBoxZoomStart',\n  boxzoomend: 'onBoxZoomEnd',\n  boxzoomcancel: 'onBoxZoomCancel',\n  resize: 'onResize',\n  load: 'onLoad',\n  render: 'onRender',\n  idle: 'onIdle',\n  remove: 'onRemove',\n  data: 'onData',\n  styledata: 'onStyleData',\n  sourcedata: 'onSourceData',\n  error: 'onError'\n};\nconst settingNames: (keyof MapboxProps)[] = [\n  'minZoom',\n  'maxZoom',\n  'minPitch',\n  'maxPitch',\n  'maxBounds',\n  'projection',\n  'renderWorldCopies'\n];\nconst handlerNames: (keyof MapboxProps)[] = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate',\n  'touchPitch'\n];\n\n/**\n * A wrapper for mapbox-gl's Map class\n */\nexport default class Mapbox {\n  private _MapClass: typeof MapboxMap;\n  // mapboxgl.Map instance. Not using type here because we are accessing\n  // private members and methods\n  private _map: any = null;\n  // User-supplied props\n  props: MapboxProps;\n\n  // Mapbox map is stateful.\n  // During method calls/user interactions, map.transform is mutated and\n  // deviate from user-supplied props.\n  // In order to control the map reactively, we shadow the transform\n  // with the one below, which reflects the view state resolved from\n  // both user-supplied props and the underlying state\n  private _renderTransform: Transform;\n\n  // Internal states\n  private _internalUpdate: boolean = false;\n  private _inRender: boolean = false;\n  private _hoveredFeatures: MapboxGeoJSONFeature[] = null;\n  private _deferredEvents: {\n    move: boolean;\n    zoom: boolean;\n    pitch: boolean;\n    rotate: boolean;\n  } = {\n    move: false,\n    zoom: false,\n    pitch: false,\n    rotate: false\n  };\n\n  static savedMaps: Mapbox[] = [];\n\n  constructor(MapClass: typeof MapboxMap, props: MapboxProps, container: HTMLDivElement) {\n    this._MapClass = MapClass;\n    this.props = props;\n    this._initialize(container);\n  }\n\n  get map(): MapboxMap {\n    return this._map as MapboxMap;\n  }\n\n  get transform(): Transform {\n    return this._renderTransform;\n  }\n\n  setProps(props: MapboxProps) {\n    const oldProps = this.props;\n    this.props = props;\n\n    const settingsChanged = this._updateSettings(props, oldProps);\n    if (settingsChanged) {\n      this._createShadowTransform(this._map);\n    }\n    const sizeChanged = this._updateSize(props);\n    const viewStateChanged = this._updateViewState(props, true);\n    this._updateStyle(props, oldProps);\n    this._updateStyleComponents(props, oldProps);\n    this._updateHandlers(props, oldProps);\n\n    // If 1) view state has changed to match props and\n    //    2) the props change is not triggered by map events,\n    // it's driven by an external state change. Redraw immediately\n    if (settingsChanged || sizeChanged || (viewStateChanged && !this._map.isMoving())) {\n      this.redraw();\n    }\n  }\n\n  static reuse(props: MapboxProps, container: HTMLDivElement) {\n    const that = Mapbox.savedMaps.pop();\n    if (!that) {\n      return null;\n    }\n\n    const map = that.map;\n    // When reusing the saved map, we need to reparent the map(canvas) and other child nodes\n    // intoto the new container from the props.\n    // Step1: reparenting child nodes from old container to new container\n    const oldContainer = map.getContainer();\n    container.className = oldContainer.className;\n    while (oldContainer.childNodes.length > 0) {\n      container.appendChild(oldContainer.childNodes[0]);\n    }\n    // Step2: replace the internal container with new container from the react component\n    // @ts-ignore\n    map._container = container;\n\n    // Step 3: apply new props\n    that.setProps({...props, styleDiffing: false});\n    map.resize();\n    const {initialViewState} = props;\n    if (initialViewState) {\n      if (initialViewState.bounds) {\n        map.fitBounds(initialViewState.bounds, {...initialViewState.fitBoundsOptions, duration: 0});\n      } else {\n        that._updateViewState(initialViewState, false);\n      }\n    }\n\n    // Simulate load event\n    if (map.isStyleLoaded()) {\n      map.fire('load');\n    } else {\n      map.once('styledata', () => map.fire('load'));\n    }\n    return that;\n  }\n\n  /* eslint-disable complexity,max-statements */\n  _initialize(container: HTMLDivElement) {\n    const {props} = this;\n    const mapOptions = {\n      ...props,\n      ...props.initialViewState,\n      accessToken: props.mapboxAccessToken || getAccessTokenFromEnv() || null,\n      container,\n      style: normalizeStyle(props.mapStyle)\n    };\n\n    const viewState = mapOptions.initialViewState || mapOptions.viewState || mapOptions;\n    Object.assign(mapOptions, {\n      center: [viewState.longitude || 0, viewState.latitude || 0],\n      zoom: viewState.zoom || 0,\n      pitch: viewState.pitch || 0,\n      bearing: viewState.bearing || 0\n    });\n\n    if (props.gl) {\n      // eslint-disable-next-line\n      const getContext = HTMLCanvasElement.prototype.getContext;\n      // Hijack canvas.getContext to return our own WebGLContext\n      // This will be called inside the mapboxgl.Map constructor\n      // @ts-expect-error\n      HTMLCanvasElement.prototype.getContext = () => {\n        // Unhijack immediately\n        HTMLCanvasElement.prototype.getContext = getContext;\n        return props.gl;\n      };\n    }\n\n    const map: any = new this._MapClass(mapOptions);\n    // Props that are not part of constructor options\n    if (viewState.padding) {\n      map.setPadding(viewState.padding);\n    }\n    if (props.cursor) {\n      map.getCanvas().style.cursor = props.cursor;\n    }\n    this._createShadowTransform(map);\n\n    // Hack\n    // Insert code into map's render cycle\n    const renderMap = map._render;\n    map._render = (arg: number) => {\n      this._inRender = true;\n      renderMap.call(map, arg);\n      this._inRender = false;\n    };\n    const runRenderTaskQueue = map._renderTaskQueue.run;\n    map._renderTaskQueue.run = (arg: number) => {\n      runRenderTaskQueue.call(map._renderTaskQueue, arg);\n      this._onBeforeRepaint();\n    };\n    map.on('render', () => this._onAfterRepaint());\n    // Insert code into map's event pipeline\n    const fireEvent = map.fire;\n    map.fire = this._fireEvent.bind(this, fireEvent);\n\n    // add listeners\n    map.on('resize', () => {\n      this._renderTransform.resize(map.transform.width, map.transform.height);\n    });\n    map.on('styledata', () => this._updateStyleComponents(this.props, {}));\n    map.on('sourcedata', () => this._updateStyleComponents(this.props, {}));\n    for (const eventName in pointerEvents) {\n      map.on(eventName, this._onPointerEvent);\n    }\n    for (const eventName in cameraEvents) {\n      map.on(eventName, this._onCameraEvent);\n    }\n    for (const eventName in otherEvents) {\n      map.on(eventName, this._onEvent);\n    }\n    this._map = map;\n  }\n  /* eslint-enable complexity,max-statements */\n\n  recycle() {\n    // Clean up unnecessary elements before storing for reuse.\n    const container = this.map.getContainer();\n    const children = container.querySelector('[mapboxgl-children]');\n    children?.remove();\n\n    Mapbox.savedMaps.push(this);\n  }\n\n  destroy() {\n    this._map.remove();\n  }\n\n  // Force redraw the map now. Typically resize() and jumpTo() is reflected in the next\n  // render cycle, which is managed by Mapbox's animation loop.\n  // This removes the synchronization issue caused by requestAnimationFrame.\n  redraw() {\n    const map = this._map;\n    // map._render will throw error if style does not exist\n    // https://github.com/mapbox/mapbox-gl-js/blob/fb9fc316da14e99ff4368f3e4faa3888fb43c513\n    //   /src/ui/map.js#L1834\n    if (!this._inRender && map.style) {\n      // cancel the scheduled update\n      if (map._frame) {\n        map._frame.cancel();\n        map._frame = null;\n      }\n      // the order is important - render() may schedule another update\n      map._render();\n    }\n  }\n\n  _createShadowTransform(map: any) {\n    const renderTransform = cloneTransform(map.transform);\n    map.painter.transform = renderTransform;\n\n    this._renderTransform = renderTransform;\n  }\n\n  /* Trigger map resize if size is controlled\n     @param {object} nextProps\n     @returns {bool} true if size has changed\n   */\n  _updateSize(nextProps: MapboxProps): boolean {\n    // Check if size is controlled\n    const {viewState} = nextProps;\n    if (viewState) {\n      const map = this._map;\n      if (viewState.width !== map.transform.width || viewState.height !== map.transform.height) {\n        map.resize();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Adapted from map.jumpTo\n  /* Update camera to match props\n     @param {object} nextProps\n     @param {bool} triggerEvents - should fire camera events\n     @returns {bool} true if anything is changed\n   */\n  _updateViewState(nextProps: MapboxProps, triggerEvents: boolean): boolean {\n    if (this._internalUpdate) {\n      return false;\n    }\n    const map = this._map;\n\n    const tr = this._renderTransform;\n    // Take a snapshot of the transform before mutation\n    const {zoom, pitch, bearing} = tr;\n    const isMoving = map.isMoving();\n\n    if (isMoving) {\n      // All movement of the camera is done relative to the sea level\n      tr.cameraElevationReference = 'sea';\n    }\n    const changed = applyViewStateToTransform(tr, {\n      ...transformToViewState(map.transform),\n      ...nextProps\n    });\n    if (isMoving) {\n      // Reset camera reference\n      tr.cameraElevationReference = 'ground';\n    }\n\n    if (changed && triggerEvents) {\n      const deferredEvents = this._deferredEvents;\n      // Delay DOM control updates to the next render cycle\n      deferredEvents.move = true;\n      deferredEvents.zoom ||= zoom !== tr.zoom;\n      deferredEvents.rotate ||= bearing !== tr.bearing;\n      deferredEvents.pitch ||= pitch !== tr.pitch;\n    }\n\n    // Avoid manipulating the real transform when interaction/animation is ongoing\n    // as it would interfere with Mapbox's handlers\n    if (!isMoving) {\n      applyViewStateToTransform(map.transform, nextProps);\n    }\n\n    return changed;\n  }\n\n  /* Update camera constraints and projection settings to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateSettings(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of settingNames) {\n      if (propName in nextProps && !deepEqual(nextProps[propName], currProps[propName])) {\n        changed = true;\n        map[`set${propName[0].toUpperCase()}${propName.slice(1)}`](nextProps[propName]);\n      }\n    }\n    return changed;\n  }\n\n  /* Update map style to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if style is changed\n   */\n  _updateStyle(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    if (nextProps.cursor !== currProps.cursor) {\n      this._map.getCanvas().style.cursor = nextProps.cursor;\n    }\n    if (nextProps.mapStyle !== currProps.mapStyle) {\n      const options: any = {\n        diff: nextProps.styleDiffing\n      };\n      if ('localIdeographFontFamily' in nextProps) {\n        options.localIdeographFontFamily = nextProps.localIdeographFontFamily;\n      }\n      this._map.setStyle(normalizeStyle(nextProps.mapStyle), options);\n      return true;\n    }\n    return false;\n  }\n\n  /* Update fog, light and terrain to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateStyleComponents(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    if (map.style.loaded()) {\n      if ('light' in nextProps && !deepEqual(nextProps.light, currProps.light)) {\n        changed = true;\n        map.setLight(nextProps.light);\n      }\n      if ('fog' in nextProps && !deepEqual(nextProps.fog, currProps.fog)) {\n        changed = true;\n        map.setFog(nextProps.fog);\n      }\n      if ('terrain' in nextProps && !deepEqual(nextProps.terrain, currProps.terrain)) {\n        if (!nextProps.terrain || map.getSource(nextProps.terrain.source)) {\n          changed = true;\n          map.setTerrain(nextProps.terrain);\n        }\n      }\n    }\n    return changed;\n  }\n\n  /* Update interaction handlers to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateHandlers(nextProps: MapboxProps, currProps: MapboxProps): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of handlerNames) {\n      const newValue = nextProps[propName];\n      if (!deepEqual(newValue, currProps[propName])) {\n        changed = true;\n        if (newValue) {\n          map[propName].enable(newValue);\n        } else {\n          map[propName].disable();\n        }\n      }\n    }\n    return changed;\n  }\n\n  _onEvent = (e: MapboxEvent) => {\n    // @ts-ignore\n    const cb = this.props[otherEvents[e.type]];\n    if (cb) {\n      cb(e);\n    }\n  };\n\n  _updateHover(e: MapMouseEvent) {\n    const {props} = this;\n    const shouldTrackHoveredFeatures =\n      props.interactiveLayerIds && (props.onMouseMove || props.onMouseEnter || props.onMouseLeave);\n\n    if (shouldTrackHoveredFeatures) {\n      const eventType = e.type;\n      const wasHovering = this._hoveredFeatures?.length > 0;\n      let features;\n      if (eventType === 'mousemove') {\n        try {\n          features = this._map.queryRenderedFeatures(e.point, {\n            layers: props.interactiveLayerIds\n          });\n        } catch {\n          features = [];\n        }\n      } else {\n        features = [];\n      }\n      const isHovering = features.length > 0;\n\n      if (!isHovering && wasHovering) {\n        e.type = 'mouseleave';\n        this._onPointerEvent(e);\n      }\n      this._hoveredFeatures = features;\n      if (isHovering && !wasHovering) {\n        e.type = 'mouseenter';\n        this._onPointerEvent(e);\n      }\n      e.type = eventType;\n    } else {\n      this._hoveredFeatures = null;\n    }\n  }\n\n  _onPointerEvent = (e: MapLayerMouseEvent | MapLayerTouchEvent) => {\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      this._updateHover(e);\n    }\n\n    // @ts-ignore\n    const cb = this.props[pointerEvents[e.type]];\n    if (cb) {\n      if (this.props.interactiveLayerIds && e.type !== 'mouseover' && e.type !== 'mouseout') {\n        const features =\n          this._hoveredFeatures ||\n          this._map.queryRenderedFeatures(e.point, {\n            layers: this.props.interactiveLayerIds\n          });\n        e.features = features;\n      }\n      cb(e);\n      delete e.features;\n    }\n  };\n\n  _onCameraEvent = (e: ViewStateChangeEvent) => {\n    if (!this._internalUpdate) {\n      // @ts-ignore\n      const cb = this.props[cameraEvents[e.type]];\n      if (cb) {\n        cb(e);\n      }\n    }\n    if (e.type in this._deferredEvents) {\n      this._deferredEvents[e.type] = false;\n    }\n  };\n\n  _fireEvent(baseFire: Function, event: string | MapboxEvent, properties?: object) {\n    const map = this._map;\n    const tr = map.transform;\n\n    const eventType = typeof event === 'string' ? event : event.type;\n    if (eventType === 'move') {\n      this._updateViewState(this.props, false);\n    }\n    if (eventType in cameraEvents) {\n      if (typeof event === 'object') {\n        (event as ViewStateChangeEvent).viewState = transformToViewState(tr);\n      }\n      if (this._map.isMoving()) {\n        // Replace map.transform with ours during the callbacks\n        map.transform = this._renderTransform;\n        baseFire.call(map, event, properties);\n        map.transform = tr;\n\n        return map;\n      }\n    }\n    baseFire.call(map, event, properties);\n\n    return map;\n  }\n\n  // All camera manipulations are complete, ready to repaint\n  _onBeforeRepaint() {\n    const map = this._map;\n\n    // If there are camera changes driven by props, invoke camera events so that DOM controls are synced\n    this._internalUpdate = true;\n    for (const eventType in this._deferredEvents) {\n      if (this._deferredEvents[eventType]) {\n        map.fire(eventType);\n      }\n    }\n    this._internalUpdate = false;\n\n    const tr = this._map.transform;\n    // Make sure camera matches the current props\n    this._map.transform = this._renderTransform;\n\n    this._onAfterRepaint = () => {\n      // Restores camera state before render/load events are fired\n      this._map.transform = tr;\n    };\n  }\n\n  _onAfterRepaint: () => void;\n}\n\n/**\n * Access token can be provided via one of:\n *   mapboxAccessToken prop\n *   access_token query parameter\n *   MapboxAccessToken environment variable\n *   REACT_APP_MAPBOX_ACCESS_TOKEN environment variable\n * @returns access token\n */\nfunction getAccessTokenFromEnv(): string {\n  let accessToken = null;\n\n  /* global location, process */\n  if (typeof location !== 'undefined') {\n    const match = /access_token=([^&\\/]*)/.exec(location.search);\n    accessToken = match && match[1];\n  }\n\n  // Note: This depends on bundler plugins (e.g. webpack) importing environment correctly\n  try {\n    accessToken = accessToken || process.env.MapboxAccessToken;\n  } catch {\n    // ignore\n  }\n\n  try {\n    accessToken = accessToken || process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n  } catch {\n    // ignore\n  }\n\n  return accessToken;\n}\n","import type {MapboxMap, LngLatLike, PointLike, ElevationQueryOptions} from '../types';\nimport type Mapbox from './mapbox';\n\n/** These methods may break the react binding if called directly */\nconst skipMethods = [\n  'setMaxBounds',\n  'setMinZoom',\n  'setMaxZoom',\n  'setMinPitch',\n  'setMaxPitch',\n  'setRenderWorldCopies',\n  'setProjection',\n  'setStyle',\n  'addSource',\n  'removeSource',\n  'addLayer',\n  'removeLayer',\n  'setLayerZoomRange',\n  'setFilter',\n  'setPaintProperty',\n  'setLayoutProperty',\n  'setLight',\n  'setTerrain',\n  'setFog',\n  'remove'\n] as const;\n\nexport type MapRef = {\n  getMap(): MapboxMap;\n} & Omit<MapboxMap, typeof skipMethods[number]>;\n\nexport default function createRef(mapInstance: Mapbox, mapLib: any): MapRef {\n  if (!mapInstance) {\n    return null;\n  }\n\n  const map: MapboxMap = mapInstance.map;\n  const result: any = {\n    getMap: () => map,\n\n    // Overwrite getters to use our shadow transform\n    getCenter: () => mapInstance.transform.center,\n    getZoom: () => mapInstance.transform.zoom,\n    getBearing: () => mapInstance.transform.bearing,\n    getPitch: () => mapInstance.transform.pitch,\n    getPadding: () => mapInstance.transform.padding,\n    getBounds: () => mapInstance.transform.getBounds(),\n    project: (lnglat: LngLatLike) => {\n      return mapInstance.transform.locationPoint(mapLib.LngLat.convert(lnglat));\n    },\n    unproject: (point: PointLike) => {\n      return mapInstance.transform.pointLocation(mapLib.Point.convert(point));\n    },\n    queryTerrainElevation: (lnglat: LngLatLike, options: ElevationQueryOptions) => {\n      // @ts-ignore transform not defined\n      const tr = map.transform;\n      // @ts-ignore transform not defined\n      map.transform = mapInstance.transform;\n      const result = map.queryTerrainElevation(lnglat, options);\n      // @ts-ignore transform not defined\n      map.transform = tr;\n      return result;\n    }\n  };\n\n  for (const key of getMethodNames(map)) {\n    // @ts-expect-error\n    if (!(key in result) && !skipMethods.includes(key)) {\n      result[key] = map[key].bind(map);\n    }\n  }\n\n  return result;\n}\n\nfunction getMethodNames(obj) {\n  const result = new Set<string>();\n\n  let proto = obj;\n  while (proto) {\n    for (const key of Object.getOwnPropertyNames(proto)) {\n      if (\n        key[0] !== '_' &&\n        typeof obj[key] === 'function' &&\n        key !== 'fire' &&\n        key !== 'setEventedParent'\n      ) {\n        result.add(key);\n      }\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Array.from(result);\n}\n","// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\n// useLayoutEffect but does not trigger warning in server-side rendering\nimport {useEffect, useLayoutEffect} from 'react';\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","export type GlobalSettings = {\n  /** The map's default API URL for requesting tiles, styles, sprites, and glyphs. */\n  baseApiUrl?: string;\n  /** The maximum number of images (raster tiles, sprites, icons) to load in parallel.\n   * @default 16\n   */\n  maxParallelImageRequests?: number;\n  /** The map's RTL text plugin. Necessary for supporting the Arabic and Hebrew languages, which are written right-to-left.  */\n  RTLTextPlugin?: string;\n  /** Provides an interface for external module bundlers such as Webpack or Rollup to package mapbox-gl's WebWorker into a separate class and integrate it with the library.\nTakes precedence over `workerUrl`. */\n  workerClass?: any;\n  /** The number of web workers instantiated on a page with mapbox-gl maps.\n   * @default 2\n   */\n  workerCount?: number;\n  /** Provides an interface for loading mapbox-gl's WebWorker bundle from a self-hosted URL.\n   * This is useful if your site needs to operate in a strict CSP (Content Security Policy) environment\n   * wherein you are not allowed to load JavaScript code from a Blob URL, which is default behavior. */\n  workerUrl?: string;\n};\n\nconst globalSettings = [\n  'baseApiUrl',\n  'maxParallelImageRequests',\n  'workerClass',\n  'workerCount',\n  'workerUrl'\n] as const;\n\nexport default function setGlobals(mapLib: any, props: GlobalSettings) {\n  for (const key of globalSettings) {\n    if (key in props) {\n      mapLib[key] = props[key];\n    }\n  }\n\n  if (\n    props.RTLTextPlugin &&\n    mapLib.getRTLTextPluginStatus &&\n    mapLib.getRTLTextPluginStatus() === 'unavailable'\n  ) {\n    mapLib.setRTLTextPlugin(\n      props.RTLTextPlugin,\n      (error?: Error) => {\n        if (error) {\n          // eslint-disable-next-line\n          console.error(error);\n        }\n      },\n      false\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  useState,\n  useRef,\n  useEffect,\n  useContext,\n  useMemo,\n  forwardRef,\n  useImperativeHandle\n} from 'react';\n\nimport {MountedMapsContext} from './use-map';\nimport Mapbox, {MapboxProps} from '../mapbox/mapbox';\nimport createRef, {MapRef} from '../mapbox/create-ref';\n\nimport type {CSSProperties} from 'react';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport setGlobals, {GlobalSettings} from '../utils/set-globals';\n\nexport type MapContextValue = {\n  mapLib: any;\n  map: MapRef;\n};\n\nexport const MapContext = React.createContext<MapContextValue>(null);\n\nexport type MapProps = MapboxProps &\n  GlobalSettings & {\n    mapLib?: any;\n    reuseMaps?: boolean;\n    /** Map container id */\n    id?: string;\n    /** Map container CSS style */\n    style?: CSSProperties;\n    children?: any;\n  };\n\nconst defaultProps: MapProps = {\n  // Constraints\n  minZoom: 0,\n  maxZoom: 22,\n  minPitch: 0,\n  maxPitch: 60,\n\n  // Interaction handlers\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n\n  // Style\n  mapStyle: {version: 8, sources: {}, layers: []},\n  styleDiffing: true,\n  projection: 'mercator',\n  renderWorldCopies: true,\n\n  // Callbacks\n  onError: e => console.error(e.error), // eslint-disable-line\n\n  // Globals\n  RTLTextPlugin:\n    'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\n};\n\nconst Map = forwardRef<MapRef, MapProps>((props, ref) => {\n  const mountedMapsContext = useContext(MountedMapsContext);\n  const [mapInstance, setMapInstance] = useState<Mapbox>(null);\n  const containerRef = useRef();\n\n  const {current: contextValue} = useRef<MapContextValue>({mapLib: null, map: null});\n\n  useEffect(() => {\n    const mapLib = props.mapLib;\n    let isMounted = true;\n    let mapbox;\n\n    Promise.resolve(mapLib || import('mapbox-gl'))\n      .then(mapboxgl => {\n        if (!isMounted) {\n          return;\n        }\n\n        if (!mapboxgl.Map) {\n          // commonjs style\n          mapboxgl = mapboxgl.default;\n        }\n        if (!mapboxgl || !mapboxgl.Map) {\n          throw new Error('Invalid mapLib');\n        }\n\n        if (mapboxgl.supported(props)) {\n          setGlobals(mapboxgl, props);\n          if (props.reuseMaps) {\n            mapbox = Mapbox.reuse(props, containerRef.current);\n          }\n          if (!mapbox) {\n            mapbox = new Mapbox(mapboxgl.Map, props, containerRef.current);\n          }\n          contextValue.map = createRef(mapbox, mapboxgl);\n          contextValue.mapLib = mapboxgl;\n\n          setMapInstance(mapbox);\n          mountedMapsContext?.onMapMount(contextValue.map, props.id);\n        } else {\n          throw new Error('Map is not supported by this browser');\n        }\n      })\n      .catch(error => {\n        props.onError({\n          type: 'error',\n          target: null,\n          originalEvent: null,\n          error\n        });\n      });\n\n    return () => {\n      isMounted = false;\n      if (mapbox) {\n        mountedMapsContext?.onMapUnmount(props.id);\n        if (props.reuseMaps) {\n          mapbox.recycle();\n        } else {\n          mapbox.destroy();\n        }\n      }\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (mapInstance) {\n      mapInstance.setProps(props);\n    }\n  });\n\n  useImperativeHandle(ref, () => contextValue.map, [mapInstance]);\n\n  const style: CSSProperties = useMemo(\n    () => ({\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      ...props.style\n    }),\n    [props.style]\n  );\n\n  return (\n    <div id={props.id} ref={containerRef} style={style}>\n      {mapInstance && (\n        <MapContext.Provider value={contextValue}>\n          <div mapboxgl-children=\"\">{props.children}</div>\n        </MapContext.Provider>\n      )}\n    </div>\n  );\n});\n\nMap.displayName = 'Map';\nMap.defaultProps = defaultProps;\n\nexport default Map;\n","import * as React from 'react';\n// This is a simplified version of\n// https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSPropertyOperations.js#L62\nconst unitlessNumber = /box|flex|grid|column|lineHeight|fontWeight|opacity|order|tabSize|zIndex/;\n\nexport function applyReactStyle(element: HTMLElement, styles: React.CSSProperties) {\n  if (!element || !styles) {\n    return;\n  }\n  const style = element.style;\n\n  for (const key in styles) {\n    const value = styles[key];\n    if (Number.isFinite(value) && !unitlessNumber.test(key)) {\n      style[key] = `${value}px`;\n    } else {\n      style[key] = value;\n    }\n  }\n}\n","/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {\n  MarkerDragEvent,\n  MapboxPopup,\n  PointLike,\n  Anchor,\n  Alignment,\n  MapboxEvent,\n  MapboxMarker\n} from '../types';\n\nimport {MapContext} from './map';\nimport {arePointsEqual} from '../utils/deep-equal';\n\nexport type MarkerProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /** A string indicating the part of the Marker that should be positioned closest to the coordinate set via Marker.setLngLat.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`, and `'bottom-right'`.\n   * @default \"center\"\n   */\n  anchor?: Anchor;\n  /**\n   * The max number of pixels a user can shift the mouse pointer during a click on the marker for it to be considered a valid click\n   * (as opposed to a marker drag). The default (0) is to inherit map's clickTolerance.\n   */\n  clickTolerance?: number;\n  /** The color to use for the default marker if options.element is not provided.\n   * @default \"#3FB1CE\"\n   */\n  color?: string;\n  /** A boolean indicating whether or not a marker is able to be dragged to a new position on the map.\n   * @default false\n   */\n  draggable?: boolean;\n  /** The offset in pixels as a PointLike object to apply relative to the element's center. Negatives indicate left and up. */\n  offset?: PointLike;\n  /** `map` aligns the `Marker` to the plane of the map.\n   * `viewport` aligns the `Marker` to the plane of the viewport.\n   * `auto` automatically matches the value of `rotationAlignment`.\n   * @default \"auto\"\n   */\n  pitchAlignment?: Alignment;\n  /** The rotation angle of the marker in degrees, relative to its `rotationAlignment` setting. A positive value will rotate the marker clockwise.\n   * @default 0\n   */\n  rotation?: number;\n  /** `map` aligns the `Marker`'s rotation relative to the map, maintaining a bearing as the map rotates.\n   * `viewport` aligns the `Marker`'s rotation relative to the viewport, agnostic to map rotations.\n   * `auto` is equivalent to `viewport`.\n   * @default \"auto\"\n   */\n  rotationAlignment?: Alignment;\n  /** The scale to use for the default marker if options.element is not provided.\n   * The default scale (1) corresponds to a height of `41px` and a width of `27px`.\n   * @default 1\n   */\n  scale?: number;\n  /** A Popup instance that is bound to the marker */\n  popup?: MapboxPopup;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n  onClick?: (e: MapboxEvent<MouseEvent>) => void;\n  onDragStart?: (e: MarkerDragEvent) => void;\n  onDrag?: (e: MarkerDragEvent) => void;\n  onDragEnd?: (e: MarkerDragEvent) => void;\n  children?: React.ReactNode;\n};\n\nconst defaultProps: Partial<MarkerProps> = {\n  draggable: false,\n  popup: null,\n  rotation: 0,\n  rotationAlignment: 'auto',\n  pitchAlignment: 'auto'\n};\n\n/* eslint-disable complexity,max-statements */\nfunction Marker(props: MarkerProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const marker: MapboxMarker = useMemo(() => {\n    let hasChildren = false;\n    React.Children.forEach(props.children, el => {\n      if (el) {\n        hasChildren = true;\n      }\n    });\n    const options = {\n      ...props,\n      element: hasChildren ? document.createElement('div') : null\n    };\n\n    const mk = new mapLib.Marker(options).setLngLat([props.longitude, props.latitude]);\n\n    mk.getElement().addEventListener('click', (e: MouseEvent) => {\n      thisRef.current.props.onClick?.({\n        type: 'click',\n        target: mk,\n        originalEvent: e\n      });\n    });\n\n    mk.on('dragstart', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragStart?.(evt);\n    });\n    mk.on('drag', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDrag?.(evt);\n    });\n    mk.on('dragend', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragEnd?.(evt);\n    });\n\n    return mk;\n  }, []);\n\n  useEffect(() => {\n    marker.addTo(map.getMap());\n\n    return () => {\n      marker.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(marker.getElement(), props.style);\n  }, [props.style]);\n\n  if (marker.getLngLat().lng !== props.longitude || marker.getLngLat().lat !== props.latitude) {\n    marker.setLngLat([props.longitude, props.latitude]);\n  }\n  if (props.offset && !arePointsEqual(marker.getOffset(), props.offset)) {\n    marker.setOffset(props.offset);\n  }\n  if (marker.isDraggable() !== props.draggable) {\n    marker.setDraggable(props.draggable);\n  }\n  if (marker.getRotation() !== props.rotation) {\n    marker.setRotation(props.rotation);\n  }\n  if (marker.getRotationAlignment() !== props.rotationAlignment) {\n    marker.setRotationAlignment(props.rotationAlignment);\n  }\n  if (marker.getPitchAlignment() !== props.pitchAlignment) {\n    marker.setPitchAlignment(props.pitchAlignment);\n  }\n  if (marker.getPopup() !== props.popup) {\n    marker.setPopup(props.popup);\n  }\n\n  return createPortal(props.children, marker.getElement());\n}\n\nMarker.defaultProps = defaultProps;\n\n// @ts-ignore\nexport default React.memo(Marker);\n","/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {PopupEvent, Anchor, PointLike, MapboxPopup} from '../types';\n\nimport {MapContext} from './map';\nimport {deepEqual} from '../utils/deep-equal';\n\nexport type PopupProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /**\n   * A string indicating the part of the popup that should be positioned closest to the coordinate.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`,\n   * and `'bottom-right'`. If unset, the anchor will be dynamically set to ensure the popup falls within the map\n   * container with a preference for `'bottom'`.\n   */\n  anchor?: Anchor;\n  /**\n   * If `true`, a close button will appear in the top right corner of the popup.\n   * @default true\n   */\n  closeButton?: boolean;\n  /**\n   * If `true`, the popup will close when the map is clicked.\n   * @default true\n   */\n  closeOnClick?: boolean;\n  /**\n   * If `true`, the popup will closed when the map moves.\n   * @default false\n   */\n  closeOnMove?: boolean;\n  /**\n   * If `true`, the popup will try to focus the first focusable element inside the popup.\n   * @default true\n   */\n  focusAfterOpen?: boolean;\n  /**\n   * A pixel offset applied to the popup's location specified as:\n   * - a single number specifying a distance from the popup's location\n   * - a PointLike specifying a constant offset\n   * - an object of Points specifing an offset for each anchor position.\n   */\n  offset?: number | PointLike | Partial<{[anchor in Anchor]: PointLike}>;\n  /** Space-separated CSS class names to add to popup container. */\n  className?: string;\n  /**\n   * A string that sets the CSS property of the popup's maximum width (for example, `'300px'`).\n   * To ensure the popup resizes to fit its content, set this property to `'none'`\n   * @default \"240px\"\n   */\n  maxWidth?: string;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  onOpen?: (e: PopupEvent) => void;\n  onClose?: (e: PopupEvent) => void;\n  children?: React.ReactNode;\n};\n\n// Adapted from https://github.com/mapbox/mapbox-gl-js/blob/v1.13.0/src/ui/popup.js\nfunction getClassList(className: string) {\n  return new Set(className ? className.trim().split(/\\s+/) : []);\n}\n\n/* eslint-disable complexity,max-statements */\nfunction Popup(props: PopupProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const container = useMemo(() => {\n    return document.createElement('div');\n  }, []);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const popup: MapboxPopup = useMemo(() => {\n    const options = {...props};\n    const pp = new mapLib.Popup(options).setLngLat([props.longitude, props.latitude]);\n    pp.once('open', e => {\n      thisRef.current.props.onOpen?.(e as PopupEvent);\n    });\n    return pp;\n  }, []);\n\n  useEffect(() => {\n    const onClose = e => {\n      thisRef.current.props.onClose?.(e as PopupEvent);\n    };\n    popup.on('close', onClose);\n    popup.setDOMContent(container).addTo(map.getMap());\n\n    return () => {\n      // https://github.com/visgl/react-map-gl/issues/1825\n      // onClose should not be fired if the popup is removed by unmounting\n      // When using React strict mode, the component is mounted twice.\n      // Firing the onClose callback here would be a false signal to remove the component.\n      popup.off('close', onClose);\n      if (popup.isOpen()) {\n        popup.remove();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(popup.getElement(), props.style);\n  }, [props.style]);\n\n  if (popup.isOpen()) {\n    if (popup.getLngLat().lng !== props.longitude || popup.getLngLat().lat !== props.latitude) {\n      popup.setLngLat([props.longitude, props.latitude]);\n    }\n    // @ts-ignore\n    if (props.offset && !deepEqual(popup.options.offset, props.offset)) {\n      popup.setOffset(props.offset);\n    }\n    // @ts-ignore\n    if (popup.options.anchor !== props.anchor || popup.options.maxWidth !== props.maxWidth) {\n      // @ts-ignore\n      popup.options.anchor = props.anchor;\n      popup.setMaxWidth(props.maxWidth);\n    }\n    // @ts-ignore\n    if (popup.options.className !== props.className) {\n      // @ts-ignore\n      const prevClassList = getClassList(popup.options.className);\n      const nextClassList = getClassList(props.className);\n\n      for (const c of prevClassList) {\n        if (!nextClassList.has(c)) {\n          popup.removeClassName(c);\n        }\n      }\n      for (const c of nextClassList) {\n        if (!prevClassList.has(c)) {\n          popup.addClassName(c);\n        }\n      }\n      // @ts-ignore\n      popup.options.className = props.className;\n    }\n  }\n\n  return createPortal(props.children, container);\n}\n\n// @ts-ignore\nexport default React.memo(Popup);\n","import {useContext, useMemo, useEffect} from 'react';\nimport type {IControl, ControlPosition} from '../types';\nimport {MapContext} from './map';\nimport type {MapContextValue} from './map';\n\ntype ControlOptions = {\n  position?: ControlPosition;\n};\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  opts?: ControlOptions\n);\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  onRemove: (context: MapContextValue) => void,\n  opts?: ControlOptions\n);\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  onAdd: (context: MapContextValue) => void,\n  onRemove: (context: MapContextValue) => void,\n  opts?: ControlOptions\n);\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  arg1?: ((context: MapContextValue) => void) | ControlOptions,\n  arg2?: ((context: MapContextValue) => void) | ControlOptions,\n  arg3?: ControlOptions\n) {\n  const context = useContext(MapContext);\n  const ctrl = useMemo(() => onCreate(context), []);\n\n  useEffect(() => {\n    const opts = (arg3 || arg2 || arg1) as ControlOptions;\n    const onAdd = typeof arg1 === 'function' && typeof arg2 === 'function' ? arg1 : null;\n    const onRemove = typeof arg2 === 'function' ? arg2 : typeof arg1 === 'function' ? arg1 : null;\n\n    const {map} = context;\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, opts?.position);\n      if (onAdd) {\n        onAdd(context);\n      }\n    }\n\n    return () => {\n      if (onRemove) {\n        onRemove(context);\n      }\n      // Map might have been removed (parent effects are destroyed before child ones)\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n\n  return ctrl;\n}\n\nexport default useControl;\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxAttributionControl} from '../types';\n\nexport type AttributionControlProps = {\n  /**\n   * If true , force a compact attribution that shows the full attribution on mouse hover.\n   * If false , force the full attribution control. The default is a responsive attribution\n   * that collapses when the map is less than 640 pixels wide.  */\n  compact?: boolean;\n  /** String or strings to show in addition to any other attributions. */\n  customAttribution?: string | string[];\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction AttributionControl(props: AttributionControlProps): null {\n  const ctrl = useControl<MapboxAttributionControl>(\n    ({mapLib}) => new mapLib.AttributionControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(AttributionControl);\n","/* global document */\nimport * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxFullscreenControl} from '../types';\n\nexport type FullscreenControlProps = {\n  /** Id of the DOM element which should be made full screen. By default, the map container\n   * element will be made full screen. */\n  containerId?: string;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction FullscreenControl(props: FullscreenControlProps): null {\n  const ctrl = useControl<MapboxFullscreenControl>(\n    ({mapLib}) =>\n      new mapLib.FullscreenControl({\n        container: props.containerId && document.getElementById(props.containerId)\n      }),\n    {position: props.position}\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(FullscreenControl);\n","import * as React from 'react';\nimport {forwardRef, useImperativeHandle, useRef, useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {\n  ControlPosition,\n  PositionOptions,\n  FitBoundsOptions,\n  MapboxGeolocateControl,\n  GeolocateEvent,\n  GeolocateResultEvent,\n  GeolocateErrorEvent\n} from '../types';\n\nexport type GeolocateControlRef = {\n  /** Triggers a geolocate event */\n  trigger: () => boolean;\n};\n\nexport type GeolocateControlProps = {\n  /**\n   * A Geolocation API PositionOptions object.\n   * @default {enableHighAccuracy:false,timeout:6000}\n   */\n  positionOptions?: PositionOptions;\n  /** A Map#fitBounds options object to use when the map is panned and zoomed to the user's location.\n   * @default {maxZoom:15}\n   */\n  fitBoundsOptions?: FitBoundsOptions;\n  /** If true the GeolocateControl becomes a toggle button and when active the map will receive\n   * updates to the user's location as it changes. Default false.\n   * @default false\n   */\n  trackUserLocation?: boolean;\n  /** Draw a transparent circle will be drawn around the user location indicating the accuracy\n   * (95% confidence level) of the user's location. Set to false to disable.\n   * This only has effect if `showUserLocation` is true.\n   * @default true\n   */\n  showAccuracyCircle?: boolean;\n  /**\n   * Show a dot on the map at the user's location. Set to false to disable.\n   * @default true\n   */\n  showUserLocation?: boolean;\n  /** If true an arrow will be drawn next to the user location dot indicating the device's heading.\n   * This only has affect when `trackUserLocation` is true. Default false.\n   * @default false\n   */\n  showUserHeading?: boolean;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  /** Called on each Geolocation API position update that returned as success. */\n  onGeolocate?: (e: GeolocateResultEvent) => void;\n  /** Called on each Geolocation API position update that returned as an error. */\n  onError?: (e: GeolocateErrorEvent) => void;\n  /** Called on each Geolocation API position update that returned as success but user position\n   * is out of map `maxBounds`. */\n  onOutOfMaxBounds?: (e: GeolocateResultEvent) => void;\n  /** Called when the GeolocateControl changes to the active lock state. */\n  onTrackUserLocationStart?: (e: GeolocateEvent) => void;\n  /** Called when the GeolocateControl changes to the background state. */\n  onTrackUserLocationEnd?: (e: GeolocateEvent) => void;\n};\n\nconst GeolocateControl = forwardRef<GeolocateControlRef, GeolocateControlProps>((props, ref) => {\n  const thisRef = useRef({props});\n\n  const ctrl = useControl<MapboxGeolocateControl>(\n    ({mapLib}) => {\n      const gc = new mapLib.GeolocateControl(props);\n\n      // Hack: fix GeolocateControl reuse\n      // When using React strict mode, the component is mounted twice.\n      // GeolocateControl's UI creation is asynchronous. Removing and adding it back causes the UI to be initialized twice.\n      const setupUI = gc._setupUI;\n      gc._setupUI = args => {\n        if (!gc._container.hasChildNodes()) {\n          setupUI(args);\n        }\n      };\n\n      gc.on('geolocate', e => {\n        thisRef.current.props.onGeolocate?.(e as GeolocateResultEvent);\n      });\n      gc.on('error', e => {\n        thisRef.current.props.onError?.(e as GeolocateErrorEvent);\n      });\n      gc.on('outofmaxbounds', e => {\n        thisRef.current.props.onOutOfMaxBounds?.(e as GeolocateResultEvent);\n      });\n      gc.on('trackuserlocationstart', e => {\n        thisRef.current.props.onTrackUserLocationStart?.(e as GeolocateEvent);\n      });\n      gc.on('trackuserlocationend', e => {\n        thisRef.current.props.onTrackUserLocationEnd?.(e as GeolocateEvent);\n      });\n\n      return gc;\n    },\n    {position: props.position}\n  );\n\n  thisRef.current.props = props;\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      trigger: () => ctrl.trigger()\n    }),\n    []\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n});\n\nGeolocateControl.displayName = 'GeolocateControl';\n\nexport default React.memo(GeolocateControl);\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxNavigationControl} from '../types';\n\nexport type NavigationControlProps = {\n  /** If true the compass button is included.\n   * @default true\n   */\n  showCompass?: boolean;\n  /** If true the zoom-in and zoom-out buttons are included.\n   * @default true\n   */\n  showZoom?: boolean;\n  /** If true the pitch is visualized by rotating X-axis of compass.\n   * @default false\n   */\n  visualizePitch?: boolean;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction NavigationControl(props: NavigationControlProps): null {\n  const ctrl = useControl<MapboxNavigationControl>(\n    ({mapLib}) => new mapLib.NavigationControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(NavigationControl);\n","import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxScaleControl} from '../types';\n\nexport type ScaleControlProps = {\n  /** Unit of the distance.\n   * @default \"metric\"\n   */\n  unit?: 'imperial' | 'metric' | 'nautical';\n  /** The maximum length of the scale control in pixels.\n   * @default 100\n   */\n  maxWidth?: number;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nconst defaultProps: ScaleControlProps = {\n  unit: 'metric',\n  maxWidth: 100\n};\n\nfunction ScaleControl(props: ScaleControlProps): null {\n  const ctrl = useControl<MapboxScaleControl>(({mapLib}) => new mapLib.ScaleControl(props), {\n    position: props.position\n  });\n\n  // @ts-ignore\n  if (ctrl.options.unit !== props.unit || ctrl.options.maxWidth !== props.maxWidth) {\n    // @ts-ignore\n    ctrl.options.maxWidth = props.maxWidth;\n    // This method will trigger an update\n    ctrl.setUnit(props.unit);\n  }\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nScaleControl.defaultProps = defaultProps;\n\nexport default React.memo(ScaleControl);\n"],"names":["MountedMapsContext","React","useMap","maps","useContext","currentMap","MapContext","useMemo","current","map","transformToViewState","tr","longitude","center","lng","latitude","lat","zoom","pitch","bearing","padding","applyViewStateToTransform","props","v","viewState","changed","constructor","isPaddingEqual","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","refProps","normalizeStyle","style","toJS","layers","layerIndex","layer","id","layerRef","ref","normalizedLayer","interactive","propName","deepEqual","a","b","aKeys","Object","keys","bKeys","key","hasOwnProperty","pointerEvents","mousedown","mouseup","mouseover","mousemove","click","dblclick","mouseenter","mouseleave","mouseout","contextmenu","touchstart","touchend","touchmove","touchcancel","cameraEvents","movestart","move","moveend","dragstart","drag","dragend","zoomstart","zoomend","rotatestart","rotate","rotateend","pitchstart","pitchend","otherEvents","wheel","boxzoomstart","boxzoomend","boxzoomcancel","resize","load","render","idle","remove","data","styledata","sourcedata","error","settingNames","handlerNames","Mapbox","MapClass","container","_map","_internalUpdate","_inRender","_hoveredFeatures","_deferredEvents","_onEvent","cb","type","_onPointerEvent","_updateHover","interactiveLayerIds","features","queryRenderedFeatures","point","_onCameraEvent","this","_MapClass","_initialize","_renderTransform","oldProps","settingsChanged","_updateSettings","_createShadowTransform","sizeChanged","_updateSize","viewStateChanged","_updateViewState","_updateStyle","_updateStyleComponents","_updateHandlers","isMoving","redraw","mapOptions","initialViewState","accessToken","mapboxAccessToken","getAccessTokenFromEnv","mapStyle","assign","gl","getContext","HTMLCanvasElement","prototype","setPadding","cursor","getCanvas","renderMap","_render","arg","runRenderTaskQueue","_renderTaskQueue","run","_onBeforeRepaint","on","_onAfterRepaint","fireEvent","fire","eventName","_fireEvent","bind","transform","width","height","children","getContainer","querySelector","savedMaps","push","_frame","cancel","renderTransform","newTransform","clone","pixelsToGLUnits","cloneTransform","painter","nextProps","triggerEvents","cameraElevationReference","deferredEvents","currProps","toUpperCase","slice","options","diff","styleDiffing","localIdeographFontFamily","setStyle","loaded","light","setLight","fog","setFog","terrain","getSource","source","setTerrain","newValue","enable","disable","onMouseMove","onMouseEnter","onMouseLeave","eventType","wasHovering","isHovering","baseFire","event","properties","that","pop","oldContainer","className","childNodes","appendChild","_container","setProps","bounds","fitBounds","fitBoundsOptions","duration","isStyleLoaded","once","location","match","exec","search","process","MapboxAccessToken","REACT_APP_MAPBOX_ACCESS_TOKEN","skipMethods","createRef","mapInstance","mapLib","result","getMap","getCenter","getZoom","getBearing","getPitch","getPadding","getBounds","project","lnglat","locationPoint","LngLat","convert","unproject","pointLocation","Point","queryTerrainElevation","obj","Set","proto","getOwnPropertyNames","add","getPrototypeOf","from","getMethodNames","includes","document","useLayoutEffect","useEffect","globalSettings","defaultProps","minZoom","maxZoom","minPitch","maxPitch","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","touchPitch","version","sources","projection","renderWorldCopies","onError","console","RTLTextPlugin","Map","forwardRef","mountedMapsContext","useState","setMapInstance","containerRef","useRef","contextValue","mapbox","isMounted","Promise","resolve","then","mapboxgl","default","Error","supported","getRTLTextPluginStatus","setRTLTextPlugin","setGlobals","reuseMaps","reuse","onMapMount","catch","target","originalEvent","onMapUnmount","recycle","destroy","useIsomorphicLayoutEffect","useImperativeHandle","position","Provider","displayName","unitlessNumber","applyReactStyle","element","styles","Number","isFinite","test","Marker","thisRef","marker","hasChildren","el","createElement","mk","setLngLat","getElement","addEventListener","onClick","evt","lngLat","getLngLat","onDragStart","onDrag","onDragEnd","addTo","offset","ax","x","ay","y","bx","by","arePointsEqual","getOffset","setOffset","isDraggable","draggable","setDraggable","getRotation","rotation","setRotation","getRotationAlignment","rotationAlignment","setRotationAlignment","getPitchAlignment","pitchAlignment","setPitchAlignment","getPopup","popup","setPopup","createPortal","getClassList","trim","split","pp","Popup","onOpen","onClose","setDOMContent","off","isOpen","anchor","maxWidth","setMaxWidth","prevClassList","nextClassList","c","has","removeClassName","addClassName","onCreate","arg1","arg2","arg3","context","ctrl","opts","onAdd","onRemove","hasControl","addControl","removeControl","useControl","AttributionControl","FullscreenControl","containerId","getElementById","_controlContainer","GeolocateControl","gc","setupUI","_setupUI","args","hasChildNodes","onGeolocate","onOutOfMaxBounds","onTrackUserLocationStart","onTrackUserLocationEnd","trigger","NavigationControl","ScaleControl","unit","setUnit"],"sourceRoot":""}