{"version":3,"file":"static/js/797.cc3e6758.chunk.js","mappings":"iTA+BA,EApBuB,SAAH,GAAkE,IAA5DA,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAKC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,UAAuB,YAC5E,OACE,UAACC,EAAA,GAAQ,YACP,UAACC,EAAA,EAAY,WACVN,EACAI,IAAa,SAACG,EAAA,EAAI,CAACC,KAAK,QAAQC,GAAI,CAAEC,GAAI,GAAKC,MAAK,WAAKC,EAAAA,EAAAA,IAAO,OAAPA,CAAeR,GAAS,YAGlFD,IACE,SAACU,EAAA,EAAU,CAACC,UAAU,IAAIC,KAAI,cAASZ,GAAc,UACnD,SAAC,MAAM,OAIb,SAACU,EAAA,EAAU,CAACG,QAAS,kBArBD,SAACf,EAAKC,GAG9Be,QAAQC,IAAI,4CAA4C,QAAD,OAAUjB,EAAG,kBAAUC,IAC9EiB,cAAc,IAAIC,YAAY,aAAc,CAAEC,OAAQ,CAAEpB,IAAAA,EAAKC,IAAAA,KAC/D,CAgBiCoB,CAAkBrB,EAAKC,EAAI,EAAC,UACrD,SAAC,MAAmB,QAI5B,E,UCbA,EAdwB,SAAH,GAAoC,IAA9BqB,EAAO,EAAPA,QAAQ,EAAD,EAAEC,OAAAA,OAAM,MAAG,KAAI,EAC/C,OACE,UAACC,EAAA,EAAI,CAAChB,GAAI,CAAEiB,UAAW,sBAAuBC,UAAW,QAAS,WAChE,SAACH,EAAM,CAAOD,QAAAA,IACbC,IAAU,SAACI,EAAA,EAAO,IAIlBL,EAAQM,KAAI,SAACC,EAAQC,GAAG,OACvB,mBAAC,GAAc,kBAAKD,GAAM,IAAEE,IAAKD,IAAO,MAIhD,C,mLCgBA,EAzBwB,WACtB,OAAqCE,EAAAA,EAAAA,MAA7BC,EAAW,EAAXA,YAAaC,EAAW,EAAXA,YACfC,EAAYC,EAAAA,EAAWH,GAE7B,OACE,SAACI,EAAA,EAAa,CAAC7B,GAAI,CAAE8B,GAAI,GAAI,UAC3B,UAACC,EAAA,EAAK,CAACC,UAAU,MAAMC,eAAe,gBAAe,WACnD,SAAC7B,EAAA,EAAU,CAACC,UAAW6B,EAAAA,GAAYC,GAAG,IAAG,UACvC,SAAC,MAAkB,MAEX,OAATR,QAAS,IAATA,GAAAA,EAAWS,SAAW,gBAAKC,MAAO,CAAEC,OAAQ,OAAQ,UACnD,gBAAKC,IAAc,OAATZ,QAAS,IAATA,OAAS,EAATA,EAAWS,QAASI,IAAG,UAAKb,EAAUc,WAAU,SAASH,OAAO,YAE1E,SAACI,EAAA,EAAU,CAAC1C,GAAI,CAAE2C,UAAW,UAAW,SACrB,gBAAhBlB,EAAgC,eAA0B,OAATE,QAAS,IAATA,OAAS,EAATA,EAAWpC,QAAiB,OAAToC,QAAS,IAATA,OAAS,EAATA,EAAWc,cAAuB,OAATd,QAAS,IAATA,OAAS,EAATA,EAAWiB,OAG7G,UAACxC,EAAA,EAAU,CAACyC,UAAQ,YACD,OAAhBnB,IAAwB,SAAC,MAAW,IACpB,OAAhBA,IAAwB,SAAC,MAAM,WAK1C,E,oBCZA,EAb6B,WAC3B,OAAqCF,EAAAA,EAAAA,MAA7BC,EAAW,EAAXA,YAAaC,EAAW,EAAXA,YACfoB,GAAkBC,EAAAA,EAAAA,UAAQ,WAC9B,OAAOC,EAAAA,EAAAA,QAAkB,SAAA3B,GAAM,OACb,gBAAhBI,GACAJ,EAAOM,YAAcF,IAClBJ,EAAOK,cAAgBA,CAAW,GACzC,GAAG,CAACD,EAAaC,IAEjB,OACE,SAACuB,EAAA,EAAc,CAACnC,QAASgC,EAAiB/B,OAAQmC,GAEtD,C","sources":["components/CinemaList/CinemaListItem.jsx","components/CinemaList/BaseCinemaList.jsx","components/CinemaList/FranchiseHeader.jsx","components/CinemaList/FranchiseCinemasList.jsx"],"sourcesContent":["import { Chip, IconButton, ListItem, ListItemText } from \"@mui/material\";\nimport { MdCall, MdOutlineLocationOn } from 'react-icons/md';\nimport { format } from 'd3-format';\n\nconst dispatchMapSnapTo = (lat, lng) => {\n  // This will dispatch the `map.snapTo` event which will trigger a listener on the\n  // respective active map component to zoom to the latitude and longitude passed\n  console.log('triggering `map.snapTo` event with args: ', `lat: ${lat}, lng: ${lng}`)\n  dispatchEvent(new CustomEvent('map.snapTo', { detail: { lat, lng } }))\n}\n\nconst CinemaListItem = ({ name, lat, lng, phoneNumber, distance, ...otherProps }) => {\n  return (\n    <ListItem>\n      <ListItemText>\n        {name}\n        {distance && (<Chip size=\"small\" sx={{ ml: 1 }} label={`${format(',.1f')(distance)} km`} />)}\n      </ListItemText>\n      {\n        phoneNumber && (\n          <IconButton component='a' href={`tel:${phoneNumber}`}>\n            <MdCall />\n          </IconButton>\n        )\n      }\n      <IconButton onClick={() => dispatchMapSnapTo(lat, lng)}>\n        <MdOutlineLocationOn />\n      </IconButton>\n    </ListItem>\n  );\n};\nexport default CinemaListItem;","import { List, Divider } from \"@mui/material\";\nimport CinemaListItem from './CinemaListItem';\n\nconst CinemaListAside = ({ cinemas, Header = null }) => {\n  return (\n    <List sx={{ maxHeight: 'calc(100vh - 112px)', overflowY: 'auto' }}>\n      <Header {...{ cinemas }} />\n      {Header && <Divider />}\n      {/* NOTE: potential future feature of adding frontend sorting */}\n      {/* NOTE: this currently doesn't handle the case of cinemas array being empty\n                (poential caused by manually manipulated url arguments) */}\n      {cinemas.map((cinema, idx) => (\n        <CinemaListItem {...cinema} key={idx} />\n      ))}\n    </List>\n  )\n}\nexport default CinemaListAside;","import { IconButton, ListSubheader, Typography, Stack } from \"@mui/material\";\nimport { GiAustralia, GiFern } from \"react-icons/gi\";\nimport { MdOutlineArrowBack } from 'react-icons/md';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useParams } from \"react-router-dom\";\nimport franchises from \"../../data/franchises\";\n\nconst FranchiseHeader = () => {\n  const { franchiseId, countryCode } = useParams();\n  const franchise = franchises[franchiseId];\n\n  return (\n    <ListSubheader sx={{ pb: 2 }}>\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        <IconButton component={RouterLink} to=\"/\">\n          <MdOutlineArrowBack />\n        </IconButton>\n        {franchise?.logoUrl ? (<div style={{ height: '3em' }}>\n          <img src={franchise?.logoUrl} alt={`${franchise.identifier} logo`} height=\"100%\" />\n        </div>) : (\n          <Typography sx={{ alignSelf: 'center' }}>\n            {franchiseId === 'all-cinemas' ? 'All Cinemas' : (franchise?.name || franchise?.identifier || franchise?.id)}\n          </Typography>\n        )}\n        <IconButton disabled>\n          {countryCode === 'au' && <GiAustralia />}\n          {countryCode === 'nz' && <GiFern />}\n        </IconButton>\n      </Stack>\n    </ListSubheader>\n  )\n}\nexport default FranchiseHeader;","import BaseCinemaList from \"./BaseCinemaList\";\nimport FranchiseHeader from \"./FranchiseHeader\";\nimport { useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport allCinemas from \"../../data/cinemas\";\n\nconst FranchiseCinemasList = () => {\n  const { franchiseId, countryCode } = useParams();\n  const filteredCinemas = useMemo(() => {\n    return allCinemas.filter(cinema => (\n      franchiseId === 'all-cinemas' ||\n      cinema.franchise === franchiseId\n    ) && cinema.countryCode === countryCode);\n  }, [franchiseId, countryCode])\n\n  return (\n    <BaseCinemaList cinemas={filteredCinemas} Header={FranchiseHeader} />\n  );\n};\nexport default FranchiseCinemasList;"],"names":["name","lat","lng","phoneNumber","distance","ListItem","ListItemText","Chip","size","sx","ml","label","format","IconButton","component","href","onClick","console","log","dispatchEvent","CustomEvent","detail","dispatchMapSnapTo","cinemas","Header","List","maxHeight","overflowY","Divider","map","cinema","idx","key","useParams","franchiseId","countryCode","franchise","franchises","ListSubheader","pb","Stack","direction","justifyContent","RouterLink","to","logoUrl","style","height","src","alt","identifier","Typography","alignSelf","id","disabled","filteredCinemas","useMemo","allCinemas","BaseCinemaList","FranchiseHeader"],"sourceRoot":""}