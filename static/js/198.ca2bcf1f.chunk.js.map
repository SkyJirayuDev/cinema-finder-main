{"version":3,"file":"static/js/198.ca2bcf1f.chunk.js","mappings":"wLAsDA,UAjDsB,WACpB,IAAMA,GAAMC,EAAAA,EAAAA,MAASC,QACrB,GAA4CC,EAAAA,EAAAA,UAAS,MAAK,eAAnDC,EAAc,KAAEC,EAAiB,KAClCC,GAASC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,UAAQ,WACtB,GAAIH,EAAOI,aAAeJ,EAAOK,YAAa,CAC5C,IAAQD,EAA6BJ,EAA7BI,YAAaC,EAAgBL,EAAhBK,YACrB,OAAOC,EAAAA,EAAAA,QAAkB,SAAAC,GAAM,OACZ,gBAAhBH,GAAiCG,EAAOC,YAAcJ,IACpDG,EAAOF,cAAgBA,CAAW,GAEzC,CACA,OAAOC,EAAAA,CACT,GAAG,CAACN,IAEJ,OACE,gCACGE,EAAQR,KAAI,SAACa,EAAQE,GAAG,OACvB,SAAC,KAAM,CAELC,UAAWH,EAAOI,IAClBC,SAAUL,EAAOM,IACjBC,OAAO,SACPC,QAAS,WACPrB,EAAIsB,MAAM,CAAEC,OAAQ,CAACV,EAAOI,IAAKJ,EAAOM,KAAMK,KAAM,KACpDnB,EAAkBQ,EACpB,GAPKE,EAQL,IAGHX,IACC,SAAC,KAAK,CACJY,UAAWZ,EAAea,IAC1BC,SAAUd,EAAee,IACzBC,OAAO,SACPK,cAAc,EACdC,QAAS,kBAAMrB,EAAkB,KAAK,EAAC,UAEvC,4BACE,wBAAKD,EAAeuB,QACpB,uBAAIvB,EAAewB,UAClBxB,EAAeyB,cAAe,uBAAIzB,EAAeyB,qBAM9D,C","sources":["components/CinemaMarkers.jsx"],"sourcesContent":["import { useMemo, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Marker, Popup, useMap } from 'react-map-gl'\nimport allCinemas from '../data/cinemas'\n\nconst CinemaMarkers = () => {\n  const map = useMap().current\n  const [selectedCinema, setSelectedCinema] = useState(null)\n  const params = useParams()\n  const cinemas = useMemo(() => {\n    if (params.franchiseId || params.countryCode) {\n      const { franchiseId, countryCode } = params\n      return allCinemas.filter(cinema =>\n        (franchiseId === 'all-cinemas' || cinema.franchise === franchiseId)\n        && cinema.countryCode === countryCode\n      )\n    }\n    return allCinemas\n  }, [params])\n\n  return (\n    <>\n      {cinemas.map((cinema, idx) => (\n        <Marker\n          key={idx}\n          longitude={cinema.lng}\n          latitude={cinema.lat}\n          anchor=\"bottom\"\n          onClick={() => {\n            map.flyTo({ center: [cinema.lng, cinema.lat], zoom: 14 })\n            setSelectedCinema(cinema)\n          }}\n        />\n      ))}\n\n      {selectedCinema && (\n        <Popup\n          longitude={selectedCinema.lng}\n          latitude={selectedCinema.lat}\n          anchor=\"bottom\"\n          closeOnClick={false}\n          onClose={() => setSelectedCinema(null)}\n        >\n          <div>\n            <h3>{selectedCinema.name}</h3>\n            <p>{selectedCinema.address}</p>\n            {selectedCinema.phoneNumber && <p>{selectedCinema.phoneNumber}</p>}\n          </div>\n        </Popup>\n      )}\n    </>\n  )\n}\n\nexport default CinemaMarkers\n"],"names":["map","useMap","current","useState","selectedCinema","setSelectedCinema","params","useParams","cinemas","useMemo","franchiseId","countryCode","allCinemas","cinema","franchise","idx","longitude","lng","latitude","lat","anchor","onClick","flyTo","center","zoom","closeOnClick","onClose","name","address","phoneNumber"],"sourceRoot":""}