{"version":3,"file":"static/js/711.fd4941bc.chunk.js","mappings":"gPASAA,IAAAA,YAAyBC,IAEzB,IAAMC,EAA2B,WAC/B,IAAQC,GAAoBC,EAAAA,EAAAA,MAApBD,gBACFE,GAAMC,EAAAA,EAAAA,MAASC,QAWrB,OAVAC,EAAAA,EAAAA,GAAiB,cAAc,YAA+B,IAAD,IAA3BC,OAAUC,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAC/C,IACEN,EAAIO,MAAM,CAAEC,OAAQ,CAACF,EAAKD,GAAMI,KAAM,IAMxC,CALE,MAAOC,GACPC,QAAQC,MAAMF,GACdZ,EAAgB,mDAAoD,CAClEe,QAAS,SAEb,CACF,IACO,IACT,EAEMC,EAAiB,SAAH,OAAMT,EAAG,EAAHA,IAAKU,EAAG,EAAHA,IAAG,OAChC,SAAC,KAAM,CAACC,UAAWD,EAAKE,SAAUZ,EAAKa,OAAO,UAAW,EAGrDC,EAAgB,SAAH,sBAAe,MAAM,CACtC,CADuB,KAAG,MAClB,CADqB,KAAG,MAEhC,EAoBF,UAlBoB,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAErB,OADAT,QAAQU,IAAI,wBAEV,UAAC,KAAG,CACFC,OAAQ3B,IACR4B,SAAS,+EACTC,iBAAkB,CAChBC,OAAQN,EAAcO,EAAAA,IAExBC,QAAS,GAAG,WAEZ,SAAC9B,EAAwB,KACzB,SAAC,KAAkB,CAAC+B,MAAO,CAAEC,OAAQf,GAAiB,SACnDM,MAIT,C,0HCnDMU,GAAaC,EAAAA,EAAAA,eAAc,MACpBC,EAAgB,WAAH,OAASC,EAAAA,EAAAA,YAAWH,EAAW,EAC5CI,EAAqB,SAAH,GAA6B,IAAvBd,EAAQ,EAARA,SAAUQ,EAAK,EAALA,MAC7C,GAAsBO,EAAAA,EAAAA,UAAS,MAAK,eAA7BnC,EAAG,KAAEoC,EAAM,KAClB,GAA4CD,EAAAA,EAAAA,UAAS,MAAK,eAAnDE,EAAc,KAAEC,EAAiB,KACxC,OACE,SAACR,EAAWS,SAAQ,CAACX,OAAK,kBAAOA,GAAK,IAAE5B,IAAAA,EAAKoC,OAAAA,EAAQC,eAAAA,EAAgBC,kBAAAA,IAAoB,SACtFlB,GAGP,C,oECAaM,EAJmBc,OAAOC,OALjB,CACpBC,GAAI,CAAC,YAAa,UAAW,YAAa,WAC1CC,GAAI,CAAC,YAAa,UAAW,YAAa,aAOAC,QAC1C,iCAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,oBAAIC,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAAEC,EAAE,WAAO,CACvCC,KAAKC,IAAIT,EAAII,GACbI,KAAKC,IAAIR,EAAII,GACbG,KAAKE,IAAIR,EAAII,GACbE,KAAKE,IAAIP,EAAII,GACd,G","sources":["components/Map/MaplibreMap.jsx","components/Map/context.js","data/bounds.js"],"sourcesContent":["import 'maplibre-gl/dist/maplibre-gl.css';\nimport Map, { Marker, useMap } from 'react-map-gl';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport maplibregl from '!maplibre-gl';\nimport useEventListener from '@use-it/event-listener';\nimport { useSnackbar } from 'notistack';\nimport { MapContextProvider } from './context';\nimport { totalBounds } from '../../data/bounds';\nimport maplibreglWorker from 'maplibre-gl/dist/maplibre-gl-csp-worker';\nmaplibregl.workerClass = maplibreglWorker;\n\nconst MapSnappingEventListener = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const map = useMap().current;\n  useEventListener('map.snapTo', ({ detail: { lat, lng } }) => {\n    try {\n      map.flyTo({ center: [lng, lat], zoom: 14 });\n    } catch (e) {\n      console.error(e);\n      enqueueSnackbar('Unexpected error while attempting map navigation', {\n        variant: 'error',\n      });\n    }\n  });\n  return null;\n};\n\nconst MaplibreMarker = ({ lat, lon }) => (\n  <Marker longitude={lon} latitude={lat} anchor='bottom' />\n);\n\nconst convertBounds = ([w, s, e, n]) => [\n  [w, s], [e, n]\n];\n\nconst MaplibreMap = ({ children }) => {\n  console.log('render Maplibre map');\n  return (\n    <Map\n      mapLib={maplibregl}\n      mapStyle='https://api.maptiler.com/maps/streets-v2/style.json?key=46DCXvzkGNIvqAgCljGV'\n      initialViewState={{\n        bounds: convertBounds(totalBounds),\n      }}\n      padding={24}\n    >\n      <MapSnappingEventListener />\n      <MapContextProvider value={{ Marker: MaplibreMarker }}>\n        {children}\n      </MapContextProvider>\n    </Map>\n  );\n};\nexport default MaplibreMap;\n","import React, { createContext, useContext, useState } from 'react'\nconst MapContext = createContext(null)\nexport const useMapContext = () => useContext(MapContext)\nexport const MapContextProvider = ({ children, value }) => {\n  const [map, setMap] = useState(null)\n  const [selectedCinema, setSelectedCinema] = useState(null)\n  return (\n    <MapContext.Provider value={{ ...value, map, setMap, selectedCinema, setSelectedCinema }}>\n      {children}\n    </MapContext.Provider>\n  )\n}\nexport default MapContext\n","// Country bounds drawn via http://bboxfinder.com/\n// they are currently in the follow format [W, S, E, N]\nconst countryBounds = {\n  au: [112.669086, -43.696673, 153.726368, -10.737187],\n  nz: [166.332922, -47.292562, 178.573837, -34.394162],\n}\n// 166.509144322, -46.641235447, 178.517093541, -34.4506617165\nexport const allCountryBounds = Object.values(countryBounds);\n// latitude is West (-) to East (+)\n// longitude is North (+) to South (-)\n\nexport const totalBounds = allCountryBounds.reduce(\n  ([w1, s1, e1, n1], [w2, s2, e2, n2]) => ([\n    Math.min(w1, w2),\n    Math.min(s1, s2),\n    Math.max(e1, e2),\n    Math.max(n1, n2),\n  ])\n)"],"names":["maplibregl","maplibreglWorker","MapSnappingEventListener","enqueueSnackbar","useSnackbar","map","useMap","current","useEventListener","detail","lat","lng","flyTo","center","zoom","e","console","error","variant","MaplibreMarker","lon","longitude","latitude","anchor","convertBounds","children","log","mapLib","mapStyle","initialViewState","bounds","totalBounds","padding","value","Marker","MapContext","createContext","useMapContext","useContext","MapContextProvider","useState","setMap","selectedCinema","setSelectedCinema","Provider","Object","values","au","nz","reduce","w1","s1","e1","n1","w2","s2","e2","n2","Math","min","max"],"sourceRoot":""}